plugins {
  alias libs.plugins.android.application apply false
  alias libs.plugins.android.library apply false
  alias libs.plugins.kotlin.android apply false

  alias libs.plugins.ben.manes.versions
  //alias libs.plugins.version.catalog.update
}


def isNonStable = { String version ->
  def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it ->
    version.toUpperCase().contains(it)
  }
  def regex = /^[0-9,.v-]+(-r)?$/
  return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
  gradleReleaseChannel = "current"
  //gradleReleaseChannel = "release-candidate" // default include milestone?
  //gradleReleaseChannel = "nightly"
//  rejectVersionIf {
//    (it.candidate.group == "org.jacoco") && (it.candidate.version != it.currentVersion)
//        || (it.candidate.name == "kotlin-stdlib-jdk8") && (it.candidate.version != it.currentVersion)
//        || isNonStable(it.candidate.version) //&& !isNonStable(it.currentVersion)
//  }
}


// https://github.com/ben-manes/gradle-versions-plugin
//tasks.named("dependencyUpdates").configure {
//  resolutionStrategy {
//    componentSelection {
//      all {
//        if (isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)) {
//          reject("* non stable")
//        } else if ((it.candidate.group == "org.jacoco") && (it.candidate.version != it.currentVersion)) {
//          reject("* group 'org.jacoco' https://github.com/ben-manes/gradle-versions-plugin/issues/534")
//        } else if ((it.candidate.name == "kotlin-stdlib-jdk8") && (it.candidate.version != it.currentVersion)) {
//          reject("* name 'kotlin-stdlib-jdk8' https://github.com/ben-manes/gradle-versions-plugin/issues/471")
//        }
//      }
//    }
//  }
//}
